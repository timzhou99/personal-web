{"version":3,"sources":["assets/img/cooking.gif","Home.js","Resume.js","Projects.js","Films.js","About.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","Home","Container","Image","className","src","require","fluid","Resume","Projects","Films","About","NoMatch","href","Layout","props","children","NavigationBar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,qC,8iBCI3C,IAAMC,EAASC,IAAOC,IAAV,KAwBCC,EAAO,kBAChB,kBAACH,EAAD,KACI,kBAACI,EAAA,EAAD,KACI,8BACA,sEACA,8CACA,kBAACC,EAAA,EAAD,CAAOC,UAAU,oCAAoCC,IAAKC,EAAQ,IAA6BC,OAAK,QChCnGC,EAAS,kBAClB,6BACI,wCCFKC,EAAW,kBACpB,+BCDSC,EAAQ,kBACjB,+BCDSC,EAAQ,kBACjB,+B,4xBCAJ,IAAMb,EAASC,IAAOC,IAAV,KAwCCY,EAAU,kBACnB,kBAAC,EAAD,KACI,6BAASR,UAAU,YACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oEACX,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,gBAAd,QAGJ,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,MAAd,0BAIA,6EACA,uBAAGS,KAAK,IAAIT,UAAU,YAAtB,sBCzDnBU,EAAS,SAACC,GAAD,OAClB,kBAACb,EAAA,EAAD,KACKa,EAAMC,W,qPCDf,IAAMlB,EAASC,IAAOC,IAAV,KAYCiB,EAAgB,kBACzB,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,CAAcP,KAAK,KAAnB,gBACA,kBAACK,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,kBAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKrB,UAAU,WACX,kBAACqB,EAAA,EAAIC,KAAL,KAAU,kBAACD,EAAA,EAAIE,KAAL,CAAUd,KAAK,KAAf,SACV,kBAACY,EAAA,EAAIC,KAAL,KAAU,kBAACD,EAAA,EAAIE,KAAL,CAAUd,KAAK,WAAf,WACV,kBAACY,EAAA,EAAIC,KAAL,KAAU,kBAACD,EAAA,EAAIE,KAAL,CAAUd,KAAK,aAAf,aACV,kBAACY,EAAA,EAAIC,KAAL,KAAU,kBAACD,EAAA,EAAIE,KAAL,CAAUd,KAAK,UAAf,UACV,kBAACY,EAAA,EAAIC,KAAL,KAAU,kBAACD,EAAA,EAAIE,KAAL,CAAUd,KAAK,UAAf,eCYfe,MA1Bf,WACE,OAEE,kBAAC,IAAMC,SAAP,KAEE,kBAAC,EAAD,MAEA,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IAEjC,kBAAC,IAAD,CAAO8B,KAAK,UAAUC,UAAWxB,IACjC,kBAAC,IAAD,CAAOuB,KAAK,YAAYC,UAAWvB,IACnC,kBAAC,IAAD,CAAOsB,KAAK,SAASC,UAAWtB,IAChC,kBAAC,IAAD,CAAOqB,KAAK,SAASC,UAAWrB,IAEhC,kBAAC,IAAD,CAAOqB,UAAWpB,SClBVqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6511342d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cooking.ef69cd23.gif\";","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { Container, Image } from 'react-bootstrap';\r\n\r\nconst Styles = styled.div`\r\n  html {\r\n    height: 100%;\r\n  }\r\n  body {\r\n    background-color: #f7eeef;\r\n    min-height: 100%;\r\n  }\r\n  h2 {\r\n    text-align: center;\r\n    padding-top: 10%;\r\n    font-family: 'Archivo';\r\n  }\r\n  h5 {\r\n    text-align: center;\r\n    padding-top: 2%;\r\n    font-family: 'Archivo';\r\n  }\r\n  .container {\r\n    background-color: white;\r\n    min-width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Home = () => (\r\n    <Styles>\r\n        <Container>\r\n            <body>\r\n            <h2>Cooking up something good, stay tuned!</h2>\r\n            <h5>- Timothy Zhou</h5>\r\n            <Image className=\"img-fluid rounded mx-auto d-block\" src={require(\"./assets/img/cooking.gif\")} fluid />\r\n            </body>\r\n        </Container>\r\n    </Styles>\r\n\r\n)","import React from 'react'\r\n\r\nexport const Resume = () => (\r\n    <div>\r\n        <h2>HELLO!</h2>\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport const Projects = () => (\r\n    <div>\r\n\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport const Films = () => (\r\n    <div>\r\n\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport const About = () => (\r\n    <div>\r\n\r\n    </div>\r\n)","import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n\r\n    .page_404 {\r\n      padding: 40px 0;\r\n      background: #fff;\r\n      font-family: \"Arvo\", serif;\r\n    }\r\n    \r\n    .page_404 img {\r\n      width: 100%;\r\n    }\r\n    \r\n    .four_zero_four_bg {\r\n      background-image: url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif);\r\n      height: 400px;\r\n      background-position: center;\r\n    }\r\n    \r\n    .four_zero_four_bg h1 {\r\n      font-size: 80px;\r\n    }\r\n    \r\n    .four_zero_four_bg h3 {\r\n      font-size: 80px;\r\n    }\r\n    \r\n    .link_404 {\r\n      color: #fff !important;\r\n      padding: 10px 20px;\r\n      background: #39ac31;\r\n      margin: 20px 0;\r\n      display: inline-block;\r\n    }\r\n    .contant_box_404 {\r\n      margin-top: -50px;\r\n    }\r\n\r\n`;\r\n\r\n\r\nexport const NoMatch = () => (\r\n    <Styles>\r\n        <section className=\"page_404\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 h-100 d-flex justify-content-center align-items-center\">\r\n                        <div className=\"col-sm-10 col-sm-offset-1 text-center\">\r\n                            <div className=\"four_zero_four_bg\">\r\n                                <h1 className=\"text-center \">404</h1>\r\n                            </div>\r\n\r\n                            <div className=\"contant_box_404\">\r\n                                <h3 className=\"h2\">\r\n                                    Looks like you're lost\r\n                                </h3>\r\n\r\n                                <p>the page you are looking for is not available!</p>\r\n                                <a href=\"/\" className=\"link_404\">Go to Home</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </Styles>\r\n)","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout = (props) => (\r\n    <Container>\r\n        {props.children}\r\n    </Container>\r\n)","import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  .navbar {\r\n    background-color: #222;\r\n  }\r\n  a, .navbar-brand, .navbar-nav .nav-link {\r\n    color: #bbb;\r\n    &:hover {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavigationBar = () => (\r\n    <Styles>\r\n        <Navbar expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Timothy Zhou</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href=\"/resume\">Resume</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href=\"/projects\">Projects</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href=\"/films\">Films</Nav.Link></Nav.Item>\r\n                    <Nav.Item><Nav.Link href=\"/about\">About</Nav.Link></Nav.Item>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    </Styles>\r\n)","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { Home } from './Home';\nimport { Resume } from './Resume';\nimport { Projects } from './Projects';\nimport { Films } from './Films';\nimport { About } from './About';\nimport { NoMatch } from './NoMatch';\n\nimport { Layout } from './components/Layout';\nimport { NavigationBar } from './components/NavigationBar';\n\nfunction App() {\n  return (\n\n    <React.Fragment>\n\n      <NavigationBar />\n\n      <Layout>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/films\" component={Films} />\n            <Route path=\"/about\" component={About} />\n\n            <Route component={NoMatch} />\n          </Switch>\n        </Router>\n      </Layout>\n    </React.Fragment>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}